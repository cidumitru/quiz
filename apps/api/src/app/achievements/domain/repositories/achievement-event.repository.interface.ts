


















































































































































































































































































































































































import { AchievementEvent } from '../../../entities/achievement-event.entity';

export interface IAchievementEventRepository {
  save(event: AchievementEvent): Promise<AchievementEvent>;
  
  saveBatch(events: AchievementEvent[]): Promise<AchievementEvent[]>;
  
  findUnprocessed(limit?: number): Promise<AchievementEvent[]>;
  
  findByUserId(userId: string, limit?: number): Promise<AchievementEvent[]>;
  
  findByUserIdAndEventType(userId: string, eventType: string, limit?: number): Promise<AchievementEvent[]>;
  
  findRecentByUserId(userId: string, since: Date, limit?: number): Promise<AchievementEvent[]>;
  
  markAsProcessed(eventId: string, processedBy: string[]): Promise<void>;
  
  markBatchAsProcessed(eventIds: string[], processedBy: string[]): Promise<void>;
  
  deleteOldEvents(olderThan: Date): Promise<number>;
}